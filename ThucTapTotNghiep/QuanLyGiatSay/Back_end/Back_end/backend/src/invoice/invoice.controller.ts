import {
    Body,
    Controller,
    Delete,
    Get,
    Param,
    Patch,
    Post,
    Query,
  } from '@nestjs/common';
  import { CreateInvoiceDto } from './dto/create_invoice.dto';
  import { UpdateInvoiceDto } from './dto/update_invoice.dto';
  import { Invoice } from './model/invoice.schema';
  import { InvoiceService } from './invoice.service';
  import { ParamPaginationDto } from 'src/common/param-pagination.dto';
  import { buildPagination } from 'src/common/common';
  
  @Controller('invoices')
  export class InvoiceController {
    constructor(private readonly invoiceService: InvoiceService) {}
  
    // âœ… Láº¥y danh sÃ¡ch hÃ³a Ä‘Æ¡n cÃ³ phÃ¢n trang + tÃ¬m kiáº¿m
    @Get()
    async getAll(@Query() query: ParamPaginationDto) {
      return this.invoiceService.findAll(query);
    }
  
    // âœ… Táº¡o hÃ³a Ä‘Æ¡n má»›i
    @Post()
    async create(@Body() body: CreateInvoiceDto) {
      console.log('ðŸ“¥ Body nháº­n Ä‘Æ°á»£c:', body);
      return this.invoiceService.create(body);
    }
  
    // âœ… Láº¥y chi tiáº¿t hÃ³a Ä‘Æ¡n theo ID
    @Get(':id')
    getOne(@Param('id') id: string) {
      return this.invoiceService.findOne(id);
    }
  
    // âœ… Cáº­p nháº­t hÃ³a Ä‘Æ¡n
    @Patch(':id')
    async updateOne(@Param('id') id: string, @Body() invoice: UpdateInvoiceDto) {
      const updatedInvoice = await this.invoiceService.update(id, invoice);
      return {
        message: `Cáº­p nháº­t thÃ´ng tin hÃ³a Ä‘Æ¡n thÃ nh cÃ´ng.`,
        updatedInvoice,
      };
    }
  
    // âœ… Cáº­p nháº­t tráº¡ng thÃ¡i hÃ³a Ä‘Æ¡n (dÃ¹ng route riÃªng)
    @Patch(':id/status')
    async updateStatus(@Param('id') id: string, @Query('status') status: string) {
      const updatedStatus = await this.invoiceService.updateStatus(id, status);
      return {
        message: `Cáº­p nháº­t tráº¡ng thÃ¡i hÃ³a Ä‘Æ¡n thÃ nh cÃ´ng.`,
        updatedStatus,
      };
    }
  
    // âœ… XÃ³a hÃ³a Ä‘Æ¡n
    @Delete(':id')
    async deleteOne(@Param('id') id: string) {
      await this.invoiceService.delete(id);
      return {
        message: `XÃ³a hÃ³a Ä‘Æ¡n cÃ³ ID ${id} thÃ nh cÃ´ng.`,
        deletedId: id,
      };
    }
  }
  
